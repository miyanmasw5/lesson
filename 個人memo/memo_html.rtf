<!--
<!DOCTYPE html>  htmlのバージョンを宣言。

<html lang="ja"> 日本語指定

<head>
 <meta charset="utf-8"> 文字コード指定

 <meta name="viewport" content="width=device-width, initial-scale=1.0">
 ※端末(スマホ向け)の画面の幅に合わせて表示するタグ指定。WEBページ倍率は1を指定。

 <link rel="stylesheet" href="./css/●●●.css">　スタイルシートの読み込み
 ※cssのフォルダは同じ階層にすること
</head>

<body>

<div class="class名">大きな段落のくくり。コンテナ。</div>

<h1>見出し</h1>

<p>段落</p>

<!--コメント-->

<a href="リンクurl">リンクテキスト</a>

画像貼り付け
<img src="画像url">
  or  
<img src="./images/●●●.png">　
※　"./画像の置き場所（フォルダは同じ階層にすること）/画像名"

<span>一部のみにcssを適用</span>

<ul>
 <li>リスト（・表示）</li>
</ul>

<ol>
 <li>1.リスト（数字表示）</li>
</ol>
※リストを詰める場合にはcssで　padding-left: 0;

<input>入力フォーム（1列）

<textarea>テキストエリア（複数列）</textarea>

<input type="属性" value="表示テキスト"></input>
※属性例：submit search reset checkbox radio file(サーバーへファイルを送信) button(凡用ボタン)


ーーーーーーーーーーーーcssメモーーーーーーーーーーーーーーーー
a {
 text-decoration: none;　　　　　　※リンクの下線を消す
}


.class名,class名 {               ※,で区切ると複数class指定可　（※.class名（空白）class名　半角あけて続けるのは親要素の子要素の場合）
  background-color: 背景色;
  background-image: url(背景画像);
  background-size: cover;       ※背景表示範囲を埋め尽くす（自動拡大縮小）
  color: 文字色;
  list-style: none;             ※リストの黒点非表示
  font-size: 文字サイズpx;
  font-family: 書式;             ※書式例：sans-serif serif arial
  font-weight: 文字の太さ;　　　　　※normal,bold　初期値はbold(太文字)
  letter-spacing:文字の間隔px;
  line-height: 高さpx;           ※文字の縦方向の行間指定。要素と幅を同じにすると文字が中央寄せになる。
  opacity: 透明度;　　　　　　　　　 ※0.0（透明）〜1（不透明）
  background-color:rgba(r,g,b,a);　　※rgbが色の指定数値、aが背景色の透明度
  height: 縦幅;
  width: 横幅;
  padding: 上px 下px 右px 左px;　　※内側の余白
  margin: 上px 下px 右px 左px;　　 ※外側の余白。　　ブロック要素を中央に寄せる場合には左右にauto指定(必ずwidthと併用)。上下のauto指定は不可。
  text-align: 寄せる方向;　　　　　　※インライン要素の寄せる方向。（margin:0 auto;とtext-align:center;は同じ結果になるが意味合いが違うので注意。
  float: 並べる方向;　　　　　　　　　※横に並べたい一個前のタグに指定する。
  clear: both;                  ※floatの解除。
  border-方向: 枠線太さpx 色 種類;  ※solidー　double＝ dashed〜　dotted…　ridge凹線　groove凸線　inset凹立体　outset凸立体
  letter-spacing: 文字間隔px;
  transition: all 秒s;          ※リンクの変化する秒数　allは変化の対象のプロパティを選択する
  display: 要素指定;　　　　　　　 　※block,inline-block,inline,flex
  border-radius: 角px;          ※BOXの角を丸くする角度
  justify-content: 要素の配置方法; ※center, left, right,end,space-between,space-around,space-evenly,stretch


  position: relative;           ※指定要素の基準値（左上基準）を変更できる(親要素につける)　activeタグにつけた場合は位置の変更指定

  position: absolute;           ※サイトの左上を基準として重ねる位置を指定　top, bottom, left,right,（子要素に指定する）
  top: px;
  left: px;

  box-shadow: 水平px　垂直px　色;  ※影の位置、影の色指定
  cursor:マウスのカーソルの形;      ※text（I）, pointer（指）,default（↑）など
  class名:active                 ※要素がクリックされている間だけCSSを適用する
  position: fixed;             ※スクロールしたとき、ポジションの固定 top, left, right, bottom
  z-index: 整数;                ※要素の重なりの順序を指定。値が大きいものが上に表示される。必ずpotisionタグと併用。
  box-sizing: border-box;      ※要素の幅の合計にpaddingとborderの値が含まれる（注：marginは含まれない）
}


:hover {
  background-color: カーソルをのせた時の背景色;


}

@media (max-width: 最大幅px) {　}　　※指定された条件の幅（または最小幅min-width）に当てはまるときにのみ{ }内のCSSが適用。
サイズ参考例（スマホ670px以下、タブレット600〜1000px、PC1001px〜）

</body>
</html>
-->


ーーーーーーーーーーーーcssメモーーーーーーーーーーーーーーーー

1rem = 16px

エラー出たときは前後のタグ見てみる

pxで指定するところは、要素に対する%の指定も可能。

メディアクエリ　→ ブラウザのサイズにあわせてCSSを設定（レスポンシブデザイン）できる手法のこと。
<head>タグ内にviewportの設定を忘れないこと。
同一CSSに記述してもOKだが、responsive.cssとしてシートを分けた方がわかりやすくてよし。
その際、CSS読み込みのURLタグ<link rel="ファイル名"　href="URL">は必ずviewportの読み込みタグより下に記述すること。


*{ } アスタリスクでCSSを記述するとすべての要素に対してCSSが適用される。
（box-sizingなど、レイアウトなどのページ全体に関わるCSSの記述は*での記載推奨）

ーーーーーーーーーーーーGITメモーーーーーーーーーーーーーーーー
リポジトリはフォルダです。
